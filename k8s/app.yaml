apiVersion: v1
kind: Namespace
metadata: { name: app }
---
# ============== FRONTEND ==============
apiVersion: apps/v1
kind: Deployment
metadata: { name: frontend, namespace: app }
spec:
  replicas: 1
  selector: { matchLabels: { app: frontend } }
  template:
    metadata: { labels: { app: frontend } }
    spec:
      containers:
        - name: frontend
          image: 192.168.40.245:5000/frontend:initial
          ports: [{ containerPort: 80 }]
          readinessProbe:
            httpGet: { path: /, port: 80 }
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata: { name: frontend, namespace: app }
spec:
  selector: { app: frontend }
  ports:
    - name: http
      port: 80
      targetPort: 80
---
# ============== BACKEND GO (8080) ==============
apiVersion: apps/v1
kind: Deployment
metadata: { name: backend-go, namespace: app }
spec:
  replicas: 1
  selector: { matchLabels: { app: backend-go } }
  template:
    metadata: { labels: { app: backend-go } }
    spec:
      containers:
        - name: backend-go
          image: 192.168.40.245:5000/backend-go:initial
          ports: [{ containerPort: 8080 }]
          readinessProbe:
            httpGet: { path: /healthz, port: 8080 }
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            # contoh kalau nanti pakai DB service bernama "postgres"
            # - name: DATABASE_URL
            #   value: "postgres://postgres:password@postgres:5432/chatdb?sslmode=disable"
            - name: PORT
              value: "8080"
---
apiVersion: v1
kind: Service
metadata: { name: backend-go, namespace: app }
spec:
  selector: { app: backend-go }
  ports:
    - name: http
      port: 8080
      targetPort: 8080
---
# ============== BACKEND RUST (8000) ==============
apiVersion: apps/v1
kind: Deployment
metadata: { name: backend-rust, namespace: app }
spec:
  replicas: 1
  selector: { matchLabels: { app: backend-rust } }
  template:
    metadata: { labels: { app: backend-rust } }
    spec:
      containers:
        - name: backend-rust
          image: 192.168.40.245:5000/backend-rust:initial
          ports: [{ containerPort: 8000 }]
          readinessProbe:
            httpGet: { path: /healthz, port: 8000 }
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: PORT
              value: "8000"
---
apiVersion: v1
kind: Service
metadata: { name: backend-rust, namespace: app }
spec:
  selector: { app: backend-rust }
  ports:
    - name: http
      port: 8000
      targetPort: 8000
---
# ============== INGRESS (route beberapa path) ==============
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: whatsvupp
  namespace: app
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: whatsvupp.wap.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service: { name: frontend, port: { number: 80 } }
          - path: /api-go
            pathType: Prefix
            backend:
              service: { name: backend-go, port: { number: 8080 } }
          - path: /api-rust
            pathType: Prefix
            backend:
              service: { name: backend-rust, port: { number: 8000 } }
